//
//  TransactionDetailsScreenProtocols.swift
//  MoneyManager
//
//  Created Tin Tun Aung on 25/01/2020.
//  Copyright Â© 2020 Tin Tun Aung. All rights reserved.
//
//  Template generated by Tin Tun Aung
//

import Foundation
import UIKit

//Presenter -> View
protocol TransactionDetailsScreenPresenterToViewProtocl: class {
    func initialControlSetup()
    func passData(records: [Record])
    func showAlertBox(_ record: Record)
    func deleteSuccess(records: [Record])
}

//View -> Presenter
protocol TransactionDetailsScreenViewToPresenterProtocol: class {
    var view: TransactionDetailsScreenPresenterToViewProtocl? {get set}
    var interactor: TransactionDetailsScreenPresentorToInterectorProtocol? {get set}
    func started()
    func getData()
    func clickRecord(_ record: Record)
    func clickDelete(_ record: Record)
}

//Interactor -> Presenter
protocol TransactionDetailsScreenInterectorToPresenterProtocol: class {
    func passData(records: [Record])
    func deleteSuccess(records: [Record])
}

//Presenter -> Interactor
protocol TransactionDetailsScreenPresentorToInterectorProtocol: class {
    var presenter: TransactionDetailsScreenInterectorToPresenterProtocol? {get set}
    func getData()
    func clickDelete(_ record: Record)
}

//Presenter -> Router or WireFrame
protocol TransactionDetailsScreenPresenterToRouterProtocol: class {
    func gotoNextScreen(fromVC: UIViewController)
}


